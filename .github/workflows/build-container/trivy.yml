name: container image vulnerability scanning and SBOM creation

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      image-digest:
        required: true
        type: string
    secrets:
      cosign-key:
        required: true
env:
  IMAGE: ${{ inputs.image-name }}@${{ inputs.image-digest }}

jobs:
  create-sbom:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - name: Generate SBOM with Trivy
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: ${{ env.IMAGE }}
          format: 'spdx'
          output: 'trivy-report.spdx'
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ github.token }}
      
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      
      - name: Attach SBOM to Container Image
        env:
          SBOM_FILE: ${{ github.workspace }}/trivy-report.spdx
          COSIGN_PRIVATE_KEY: ${{ secrets.cosign-key }}
          COSIGN_KEY_FILE: ${{ github.workspace }}/cosign-private.key
        # Passing the env with env://COSIGN_PRIVATE_KEY does not work because the format is not PEM conformant
        run: |
          echo "${COSIGN_PRIVATE_KEY}" > $COSIGN_KEY_FILE
          cosign attest --type spdx --predicate ${SBOM_FILE} --key ${COSIGN_KEY_FILE} --yes ${IMAGE}
      
      - name: Upload Trivy SBOM as Github artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-sbom-report
          path: ${{ github.workspace }}/trivy-report.spdx
