/*
 * Copyright Â© Siemens 2025 - 2025
 *
 * Licensed under the Siemens Inner Source License 1.5
 *
 * Authors: Kristi Balla, renovate[bot]
 *
 * SPDX-FileCopyrightText: 2025 Siemens
 *
 * SPDX-License-Identifier: LicenseRef-Siemens-ISL-1.5
 */

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'nebula.lint' version '20.6.1'
	id 'com.github.spotbugs' version '6.2.0'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	spotbugs 'com.github.spotbugs:spotbugs:4.9.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

gradleLint {
	alwaysRun = false
}

// the only working workaround for the spotbugs plugin in multi-project builds
def classLoader = plugins['com.github.spotbugs'].class.classLoader
def SpotBugsTask = classLoader.findLoadedClass( 'com.github.spotbugs.snom.SpotBugsTask' )
def SpotBugsEffort = classLoader.findLoadedClass( 'com.github.spotbugs.snom.Effort' )
def SpotBugsConfidence = classLoader.findLoadedClass( 'com.github.spotbugs.snom.Confidence' )

spotbugs {
	effort = SpotBugsEffort.MORE
    reportLevel = SpotBugsConfidence.HIGH
	ignoreFailures = false
    showProgress = false
}

spotbugsMain {
    reports {
        html {
            required = true
            outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
        }
    }
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
	reports {
        xml.required = true
        html.required = true
    }
}
